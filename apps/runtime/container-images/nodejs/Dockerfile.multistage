# Multi-stage Node.js runtime image for Cronium with enhanced security
# Stage 1: Build stage
FROM node:20-alpine AS builder

# Install dependencies
RUN npm install -g --no-save axios@1.6.2

# Stage 2: Runtime stage  
FROM node:20-alpine

# Install only runtime dependencies
RUN apk add --no-cache tini

# Create non-root user
RUN addgroup -g 1000 -S cronium && \
    adduser -u 1000 -S cronium -G cronium -h /home/cronium -s /bin/false

# Copy node modules from builder
COPY --from=builder /usr/local/lib/node_modules /usr/local/lib/node_modules

# Set up directories
RUN mkdir -p /app /tmp/cronium && \
    chown -R cronium:cronium /app /tmp/cronium /home/cronium

# Copy Cronium SDK files
COPY --chown=cronium:cronium cronium.js /usr/local/lib/
COPY --chown=cronium:cronium cronium.d.ts /usr/local/lib/
COPY --chown=cronium:cronium package.json /usr/local/lib/
COPY --chown=cronium:cronium healthcheck.js /usr/local/bin/
RUN chmod +x /usr/local/bin/healthcheck.js

# Security hardening - remove all package managers and development tools
RUN rm -rf /usr/local/lib/node_modules/npm \
    /usr/local/bin/npm \
    /usr/local/bin/npx \
    /usr/local/bin/corepack \
    /opt/yarn* \
    /usr/local/bin/yarn \
    /usr/local/bin/yarnpkg \
    /usr/local/lib/node_modules/corepack

# Remove apk package manager
RUN apk del --no-cache \
    apk-tools \
    alpine-keys \
    alpine-baselayout-data \
    ca-certificates-bundle

# Remove shells and unnecessary binaries
RUN rm -rf /bin/sh /bin/ash /bin/busybox && \
    ln -s /bin/false /bin/sh

# Clear all caches and temporary files
RUN rm -rf /var/cache/apk/* \
    /tmp/* \
    /var/tmp/* \
    /usr/share/man/* \
    /usr/share/doc/* \
    /etc/apk \
    /lib/apk \
    /root \
    /media \
    /mnt \
    /srv

# Remove setuid/setgid binaries
RUN find / -perm /6000 -type f -exec chmod a-s {} \; 2>/dev/null || true

# Minimal environment
ENV NODE_ENV=production \
    NODE_PATH=/usr/local/lib \
    HOME=/home/cronium \
    USER=cronium \
    PATH=/usr/local/bin:/usr/bin:/bin

# Read-only root filesystem compatibility
RUN mkdir -p /home/cronium/.config && \
    chown -R cronium:cronium /home/cronium/.config

# Switch to non-root user
USER cronium
WORKDIR /app

# Use tini as entrypoint
ENTRYPOINT ["/sbin/tini", "--"]

# Default command
CMD ["node", "-e", "console.log('Cronium Node.js Runtime Ready')"]

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD node /usr/local/bin/healthcheck.js || exit 1